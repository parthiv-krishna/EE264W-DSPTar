%%%%%%%%%%
 % @file reverb.m
 % @author Parthiv Krishna
 % @brief Script to generate, test, and visualize reverb array
 % 
 % Creates an impulse response array with a given IR WAV file and
 % outputs the result to reverb_array.h.
 % 
 %%%%%%%%%

filename = "wilbur_44100.wav";
order = 8000;
 
[data, fs] = audioread(filename);
% data = round(data_raw * 2^10); % Q.15
data = data(1:order);

if (fs ~= 44100)
    error("%s has fs=%d but dsptar runs at 44.1kHz", filename, fs);
end

shape = size(data);

if (mod(shape(1), 2) ~= 0 || shape(1) < 4)
    error("length is %d but must be an even number >= 4", shape(1));
end

if (shape(2) ~= 1)
    error("%s is stereo but dsptar only supports mono reverb", filename);
end


% Generate reverb_array.h
fileID = fopen("reverb_array.h", "w+");

fprintf(fileID, '// autogenerated by Matlab\n');
fprintf(fileID, '// see matlab/reverb/reverb.m\n');

fprintf(fileID, '#ifndef REVERB_ARRAY_H\n');
fprintf(fileID, '#define REVERB_ARRAY_H\n\n');

fprintf(fileID, '#define REVERB_ARR_LEN %6d\n', shape(1));
fprintf(fileID, 'const float32_t REVERB_ARR[REVERB_ARR_LEN] = {\n');

repeat_str = '    %6f, %6f, %6f, %6f, %6f, %6f, %6f, %6f,\n';
num_repeats = int32(numel(data)/8);
fmt = [repmat(repeat_str, 1, num_repeats)];
fprintf(fileID, fmt, data);

repeat_str2 = '%6f, ';
num_remaining = numel(data) - num_repeats*8 - 1;
fmt2 = ['    ' repmat(repeat_str2, 1, num_remaining) '\n};\n'];
fprintf(fileID, fmt2, data((num_repeats * 8 + 1 + 1):end));
fprintf(fileID, '\n#endif // REVERB_ARRAY_H\n');

fclose(fileID);
